// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package xslt.actions;

import java.io.*;
import javax.xml.transform.stream.StreamSource;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import net.sf.saxon.s9api.*;

public class XSLT extends CustomJavaAction<java.lang.String>
{
	private java.lang.String Source;
	private java.lang.String Stylesheet;

	public XSLT(IContext context, java.lang.String Source, java.lang.String Stylesheet)
	{
		super(context);
		this.Source = Source;
		this.Stylesheet = Stylesheet;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
		Processor proc = new Processor(false);
		XsltCompiler comp = proc.newXsltCompiler();
        XsltExecutable exp = comp.compile(new StreamSource(new StringReader(Stylesheet)));
        XdmNode source = proc.newDocumentBuilder().build(new StreamSource(new StringReader(Source)));
        Serializer out = proc.newSerializer();
        StringWriter writer = new StringWriter();
		out.setOutputWriter(writer);
        XsltTransformer trans = exp.load();
        trans.setInitialContextNode(source);
        trans.setDestination(out);
        trans.transform();
        
		return writer.getBuffer().toString();
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "XSLT";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
